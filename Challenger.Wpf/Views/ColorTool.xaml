<UserControl
    x:Class="Challenger.Wpf.Views.ColorTool"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Challenger.Wpf.Converters"
    xmlns:helpers="clr-namespace:Challenger.Wpf.Helpers"
    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:materialColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
    xmlns:views="clr-namespace:Challenger.Wpf.Views"
    xmlns:vm="clr-namespace:Challenger.Wpf.ViewModels">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />

            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth0" />
            </Style>

            <Style
                x:Key="HexLabelTextBlock"
                BasedOn="{StaticResource MaterialDesignBody2TextBlock}"
                TargetType="TextBlock">
                <Setter Property="Margin" Value="8" />
            </Style>

            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <Style x:Key="LabelTextBox" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,0,4" />
            </Style>

            <DataTemplate x:Key="SwatchColorTemplate" DataType="{x:Type Color}">
                <Button
                    Width="40"
                    Height="40"
                    Background="{Binding Converter={StaticResource ColorToBrushConverter}}"
                    Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=views:ColorTool}}"
                    CommandParameter="{Binding}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="helpers:ButtonAssist.UniformCornerRadius" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1,1,0,0" />
                            <Setter Property="material:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="Tag" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(helpers:ButtonAssist.UniformCornerRadius)"
                                                    To="8"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(helpers:ButtonAssist.UniformCornerRadius)"
                                                    From="8"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="DataContext.SelectedColor"
                                                RelativeSource="{RelativeSource AncestorType=views:ColorTool}" />
                                            <Binding Mode="OneWay" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(helpers:ButtonAssist.UniformCornerRadius)"
                                                    To="20"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(helpers:ButtonAssist.UniformCornerRadius)"
                                                    From="20"
                                                    Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.DataContext>
        <vm:ColorToolViewModel />
    </UserControl.DataContext>

    <DockPanel>
        <StackPanel
            Margin="8"
            DockPanel.Dock="Top"
            Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center">Light</TextBlock>
            <ToggleButton
                Margin="8,0,16,0"
                Command="{Binding ToggleBaseCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />
            <TextBlock VerticalAlignment="Center">Dark</TextBlock>
        </StackPanel>
        <DockPanel>
            <!--  Selection controls  -->
            <Border DockPanel.Dock="Bottom">
                <Grid>
                    <Grid.Resources>
                        <Style
                            x:Key="PaletteButton"
                            BasedOn="{StaticResource MaterialDesignRaisedButton}"
                            TargetType="Button">
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="material:ShadowAssist.ShadowEdges" Value="All" />
                            <Setter Property="material:RippleAssist.Feedback" Value="LightGray" />
                            <Setter Property="material:RippleAssist.RippleOnTop" Value="True" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                            <Setter Property="Padding" Value="16" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="300" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!--  Primary selection  -->
                    <Border BorderBrush="LightGray" BorderThickness="0,0,1,0">
                        <Button Command="{Binding ChangeToPrimaryCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                            <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Primary</TextBlock>
                                <!--  Primary mid section  -->
                                <Border Grid.Row="1" Background="{DynamicResource PrimaryHueMidBrush}">
                                    <Grid>
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueMidBrush}"
                                            Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                        <Border
                                            Width="30"
                                            Height="30"
                                            CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontSize="22"
                                                Text="P">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Grid.Row="2" Rows="1">
                                    <!--  Primary light  -->
                                    <Border Background="{DynamicResource PrimaryHueLightBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueLightBrush}"
                                            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                    </Border>
                                    <!--  Primary dark  -->
                                    <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueDarkBrush}"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <!--  Secondary selection  -->
                    <Border
                        Grid.Column="1"
                        BorderBrush="LightGray"
                        BorderThickness="0,0,1,0">
                        <Button Command="{Binding ChangeToSecondaryCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                            <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Secondary</TextBlock>
                                <!--  Secondary mid section  -->
                                <Border Grid.Row="1" Background="{DynamicResource SecondaryAccentBrush}">
                                    <Grid>
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueMidBrush}"
                                            Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                        <Border
                                            Width="30"
                                            Height="30"
                                            CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                            <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontSize="22"
                                                Text="S">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Grid.Row="2" Rows="1">
                                    <!--  Secondary light  -->
                                    <Border Background="{DynamicResource SecondaryHueLightBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueLightBrush}"
                                            Foreground="{DynamicResource SecondaryHueLightForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                    </Border>
                                    <!--  Secondary dark  -->
                                    <Border Background="{DynamicResource SecondaryHueDarkBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueDarkBrush}"
                                            Foreground="{DynamicResource SecondaryHueDarkForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <UniformGrid Grid.Column="2" Columns="1">
                        <!--  Primary foreground selection  -->
                        <Border BorderBrush="LightGray" BorderThickness="0,0,0,1">
                            <Button Command="{Binding ChangeToPrimaryForegroundCommand}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth3" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Text on P</TextBlock>
                                    <Border Grid.Row="1" Background="{DynamicResource PrimaryHueMidBrush}">
                                        <Grid>
                                            <TextBlock
                                                DataContext="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                Style="{StaticResource HexLabelTextBlock}"
                                                Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                            <Border
                                                Width="30"
                                                Height="30"
                                                CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="22"
                                                    Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                        <!--  Secondary foreground selection  -->
                        <Border>
                            <Button Command="{Binding ChangeToSecondaryForegroundCommand}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                <Setter Property="material:ShadowAssist.ShadowDepth" Value="Depth3" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Text on S</TextBlock>
                                    <Border Grid.Row="1" Background="{DynamicResource SecondaryAccentBrush}">
                                        <Grid>
                                            <TextBlock
                                                DataContext="{DynamicResource SecondaryAccentForegroundBrush}"
                                                Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                                Style="{StaticResource HexLabelTextBlock}"
                                                Text="{Binding Converter={StaticResource BrushToHexConverter}}" />
                                            <Border
                                                Width="30"
                                                Height="30"
                                                CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource SecondaryAccentForegroundBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="22"
                                                    Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                    </UniformGrid>
                </Grid>
            </Border>
            <!--  Current scheme label  -->
            <Border BorderThickness="1,0,1,0" DockPanel.Dock="Bottom">
                <TextBlock Margin="16" Style="{StaticResource LabelTextBox}">CURRENT SCHEME</TextBlock>
            </Border>

            <!--  Color picker section  -->
            <DockPanel Margin="16">
                <UniformGrid Columns="1" DockPanel.Dock="Right">
                    <RadioButton
                        x:Name="MdPaletteButton"
                        Margin="4"
                        Content="MD Palette"
                        IsChecked="True"
                        Style="{StaticResource MaterialDesignTabRadioButton}" />
                    <RadioButton
                        x:Name="CustomPaletteButton"
                        Margin="4"
                        Content="Custom"
                        IsChecked="False"
                        Style="{StaticResource MaterialDesignTabRadioButton}" />
                </UniformGrid>
                <Grid DockPanel.Dock="Left">
                    <Grid Visibility="{Binding IsChecked, ElementName=CustomPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <DockPanel>
                            <TextBox
                                Margin="2,0,10,2"
                                material:HintAssist.Hint="Color HEX value"
                                DockPanel.Dock="Top"
                                Style="{StaticResource MaterialDesignFilledTextFieldTextBox}"
                                Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}" />
                            <Rectangle Margin="2,0,10,2" Fill="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToBrushConverter}}" />
                        </DockPanel>
                        <material:ColorPicker
                            x:Name="ColorPicker"
                            Grid.Column="1"
                            Color="{Binding SelectedColor, Delay=25}" />
                    </Grid>

                    <ScrollViewer Visibility="{Binding IsChecked, ElementName=MdPaletteButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Width" Value="40" />
                                        <Setter Property="Margin" Value="1,1,0,0" />
                                        <Setter Property="TextAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Resources>
                                <Rectangle Width="80" />
                                <TextBlock>50</TextBlock>
                                <TextBlock>100</TextBlock>
                                <TextBlock>200</TextBlock>
                                <TextBlock>300</TextBlock>
                                <TextBlock>400</TextBlock>
                                <TextBlock>500</TextBlock>
                                <TextBlock>600</TextBlock>
                                <TextBlock>700</TextBlock>
                                <TextBlock>800</TextBlock>
                                <TextBlock>900</TextBlock>
                                <TextBlock>A100</TextBlock>
                                <TextBlock>A200</TextBlock>
                                <TextBlock>A400</TextBlock>
                                <TextBlock>A700</TextBlock>
                            </StackPanel>
                            <ItemsControl ItemsSource="{Binding Swatches}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type materialColors:ISwatch}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Width="80"
                                                VerticalAlignment="Center"
                                                Text="{Binding Name}" />
                                            <ItemsControl ItemTemplate="{StaticResource SwatchColorTemplate}" ItemsSource="{Binding Hues}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</UserControl>
